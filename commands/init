#!/usr/bin/env node

const inquirer = require('inquirer')
const fs = require('fs')
const localData = require(`${__dirname}/../localData.json`)
const symbols = require('log-symbols')
const chalk = require('chalk')
chalk.level = 1

const question = [
  {
    name: 'dirname',
    type: 'input',
    message: 'input relative dirname,default value cwd',
    validate(val) {
      return true
    },
  },
  {
    name: 'apiKey',
    type: 'input',
    message: 'input apiKey',
    validate(val) {
      if (!val) return 'apiKey is required! get it now!!! (https://tinypng.com/developers)'
      return true
    },
  },

  {
    name: 'limitSize',
    type: 'input',
    message: 'input limit size of file(kb), default value 50',
    validate(val) {
      return true
    },
  },
]
inquirer.prompt(question).then((answers) => {
  let { apiKey, dirname, limitSize } = answers //value is "",not undefined
  apiKey = apiKey || localData.apiKey
  limitSize = parseInt(limitSize || 50)

  const mergeData = { ...localData, apiKey, dirname, limitSize }

  fs.writeFile(`${__dirname}/../localData.json`, JSON.stringify(mergeData), 'utf-8', (err) => {
    if (err) {
      return console.log(chalk.red(symbols.error), chalk.red(err))
    }
    console.log(chalk.green(symbols.success), chalk.green('init successfully!\n'))
  })
})
